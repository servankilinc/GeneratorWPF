((w, d, dg) => {w.resumedia = w.resumedia || {};const r = w.resumedia;r.dki = function dki(key) {const parsedUrl = new URL(d.location);const dirtyKeyword = parsedUrl.searchParams.get(key);if (!dirtyKeyword) return null;const keyword = dirtyKeyword.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');if (['dl', 'jp'].includes(key)) w.sessionStorage.setItem(key, keyword);if (['gclid', 'gbraid', 'wbraid', 'msclkid'].includes(key)) w.localStorage.setItem(key, keyword);if (['title', 'dl', 'jp'].includes(key)) {const newSearchParams = new URLSearchParams(parsedUrl.search);newSearchParams.delete(key);w.history.replaceState({}, '', `${parsedUrl.pathname}${newSearchParams.size > 0 ? `?${newSearchParams}` : ''}`);}return keyword;};(() => {const reportedErrors = [];const addEventErrorHandler = eventType => {w.addEventListener(eventType, event => {if (!event) return true;if (true) event.preventDefault();const error = event.error || event.reason || new Error(event.message || event.type || event.toString?.() || 'unknown event');let message = "Frontend-app";message += ` ${eventType} ${event.constructor.name}: ${error.message || error.toString?.()}`;if (message.includes('ResizeObserver')) return true;if (message.includes("undefined is not an object (evaluating 'this.touchendListener')")) return true;const errorToReport = {message,filename: error.filename || event.filename,lineno: error.lineno || event.lineno,colno: error.colno || event.colno,stack: error.stack || event.stack,url: w.location.href,referrer: d.referrer || null};console.error('Error', errorToReport);if (reportedErrors.includes(message)) return true;reportedErrors.push(message);fetch('/api/csrf-token').then(res => {res.json().then(_ref2 => {let {csrfToken} = _ref2;fetch('/api/user/report', {method: 'POST',headers: {'x-csrf-token': csrfToken,'Content-Type': 'application/json','x-resu-client-version': "2025-03-28T13:42:38.331Z",'x-resu-client-platform': 'web'},body: JSON.stringify(errorToReport)});});});return true;});};addEventErrorHandler('error');addEventErrorHandler('unhandledrejection');if ('serviceWorker' in w.navigator && true && !['GoogleBot', 'Google-InspectionTool'].some(ua => w.navigator.userAgent.includes(ua))) {w.addEventListener('load', () => {w.navigator.serviceWorker.register('/service-worker.js');});}})();(() => {r.dki("gclid");})();(() => {r.dki("gbraid");})();(() => {r.dki("wbraid");})();(() => {r.dki("msclkid");})();(() => {let count = 0;const checkPrivacyLink = elementId => {const element = dg(elementId);if (element) {element.innerHTML = element.innerHTML.replaceAll('www.jobseeker.com', w.location.hostname);element.innerHTML = element.innerHTML.replaceAll('href="#details"', 'href="#" id="cookiebot_show_details"');const detailsLink = dg('cookiebot_show_details');if (detailsLink) {detailsLink.addEventListener('click', () => w.CookieConsentDialog.toggleDetails());return;}}count += 1;if (count <= 10) setTimeout(() => checkPrivacyLink(elementId), 1000);};setTimeout(() => checkPrivacyLink('CybotCookiebotDialogBodyContentText'), 1000);setTimeout(() => checkPrivacyLink('CybotCookiebotDialogDetailBodyContentTextAbout'), 1000);})();})(window, document, document.getElementById.bind(document))